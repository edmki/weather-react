{"version":3,"sources":["components/Header.js","utils/HoizontalScroll.js","components/CityCard.js","components/CityCardList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","Switch","onChange","event","onColorModeChange","target","checked","defaultChecked","HorizontalScroll","ref","useRef","useState","isDragging","setIsDragging","clientX","setClientX","scrollX","setScrollX","useEffect","window","addEventListener","onMouseUp","removeEventListener","onMouseDown","e","newClientX","touches","current","scrollLeft","onMouseMove","style","overflow","cursor","userSelect","onWheel","delta","Math","sign","deltaY","onTouchStart","onTouchMove","children","appid","CurrentWeather","iconUrl","data","weather","icon","temp","round","parseFloat","tempMin","dayData","min","tempMax","max","name","Tooltip","title","description","src","alt","WeatherNext","hourlyData","filter","item","i","numHours","map","key","precipitation","pop","Date","dt","getHours","draggable","CityCard","query","setQuery","weatherData","setWeatherData","loading","setLoading","error","setError","loadCurrentWeather","onSuccessQuery","id","onError","submitHandler","a","preventDefault","cityName","fetchGeolocation","lat","lon","fetchWeather","console","message","fetch","response","ok","Error","status","json","length","cod","searchForm","FormControl","component","onSubmit","sx","p","display","alignItems","width","flexDirection","Input","autoFocus","placeholder","required","color","ml","flex","onInput","value","IconButton","type","aria-label","onClick","onDelete","size","fontSize","Alert","severity","Object","keys","daily","hourly","CircularProgress","AddButton","stroke","height","viewBox","fill","xmlns","d","strokeWidth","strokeLinecap","CityCardList","cities","setCities","alert","citiesRef","cityNames","JSON","parse","localStorage","getItem","city","setItem","stringify","index","newCities","deleteCard","el","onCityError","toString","cityComponent","Snackbar","open","autoHideDuration","onClose","reason","App","colorMode","setColorMode","theme","createTheme","palette","mode","background","default","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db13d1cc.chunk.js","sourcesContent":["import './Header.css';\r\nimport Switch from '@mui/material/Switch';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nfunction Header(props) {\r\n\treturn (\r\n\t\t<header className=\"Header\">\r\n\t\t\t{/* <div className='Header-menu'><MenuIcon/></div> */}\r\n\t\t\t<div className='Header-title'>HOJE</div>\r\n\t\t\t<div className='Header-switch'>\r\n\t\t\t\t<LightModeIcon/><Switch onChange={(event) => props.onColorModeChange(event.target.checked ? \"dark\" : \"light\")} defaultChecked /><DarkModeIcon/>\r\n\t\t\t</div>\r\n\t\t</header>\r\n\t);\r\n}\r\n\r\nexport default Header;","import { useState, useEffect, useRef } from 'react';\r\n\r\nfunction HorizontalScroll(props) {\r\n    const ref = useRef(null);\r\n    const [isDragging, setIsDragging] = useState(false);\r\n    const [clientX, setClientX] = useState(0);\r\n    const [scrollX, setScrollX] = useState(0);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"mouseup\", onMouseUp);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"mouseup\", onMouseUp);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"toutchend\", onMouseUp);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"toutchend\", onMouseUp);\r\n        };\r\n    }, []);\r\n\r\n    const onMouseDown = function (e) {\r\n        const newClientX = e.touches ? e.touches[0].clientX : e.clientX;\r\n        setIsDragging(true);\r\n        setClientX(newClientX);\r\n        setScrollX(ref.current.scrollLeft);\r\n    }\r\n\r\n\r\n    const onMouseUp = function (e) {\r\n        setIsDragging(false);\r\n    }\r\n\r\n    const onMouseMove = function (e) {\r\n        const newClientX = e.touches ? e.touches[0].clientX : e.clientX;\r\n        if (isDragging) {\r\n            ref.current.scrollLeft = scrollX + clientX - newClientX;\r\n        }\r\n    }\r\n\r\n    const onWheel = function (e) {\r\n        const delta = Math.sign(e.deltaY)\r\n        ref.current.scrollLeft += delta * 20;\r\n    }\r\n\r\n    return (\r\n        <div ref={ref} className={props.className} style={{ overflow: \"hidden\", cursor: \"pointer\", userSelect: \"none\" }} onMouseDown={onMouseDown} onMouseMove={onMouseMove} onWheel={onWheel} onTouchStart={onMouseDown} onTouchMove={onMouseMove}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HorizontalScroll;","import './CityCard.css';\r\nimport { useState, useEffect } from 'react';\r\nimport HorizontalScroll from '../utils/HoizontalScroll';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Input from '@mui/material/Input';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nconst appid = \"02717570ae161f36b367bfd021863328\";\r\n\r\nfunction CityCard(props) {\r\n    const [query, setQuery] = useState(\"\");\r\n    const [weatherData, setWeatherData] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (props.name)\r\n            loadCurrentWeather(props.name);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (weatherData && props.onSuccessQuery) {\r\n            props.onSuccessQuery(query, props.id);\r\n        }\r\n    }, [weatherData]);\r\n\r\n    useEffect(() => {\r\n        if (error && props.onError) {\r\n            props.onError(error, props.id);\r\n        }\r\n    }, [error]);\r\n\r\n    const submitHandler = async function (e) {\r\n        e.preventDefault();\r\n        loadCurrentWeather(query);\r\n    }\r\n\r\n    const loadCurrentWeather = async function (cityName) {\r\n        setLoading(true);\r\n        try {\r\n            const [lat, lon] = await fetchGeolocation(cityName);\r\n            const data = await fetchWeather(lat, lon);\r\n            data.name = cityName;\r\n            setWeatherData(data);\r\n            setLoading(false);\r\n        } catch (err) {\r\n            console.error(err);\r\n            setError(err.message)\r\n        }\r\n    }\r\n\r\n    const fetchGeolocation = async function (cityName) {\r\n        const response = await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${cityName}&appid=${appid}`);\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.length == 0) {\r\n            throw new Error(\"Cidade não encontrada\");\r\n        }\r\n\r\n        if (data.cod && data.cod != 200) {\r\n            throw new Error(data.message || \"Unknown error\");\r\n        }\r\n\r\n        return [data[0].lat, data[0].lon];\r\n    }\r\n\r\n    const fetchWeather = async function (lat, lon) {\r\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${appid}&exclude=minutely&units=metric&lang=pt_br`);\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        if (data.cod && data.cod != 200) {\r\n            throw new Error(data.message || \"Unknown error\");\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    const searchForm = (\r\n        <FormControl component=\"form\" onSubmit={submitHandler} name=\"city\" sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: \"100%\", flexDirection: \"row\" }}>\r\n            <Input autoFocus={true} placeholder=\"Cidade\" required={true} color={\"primary\"} sx={{ ml: 1, flex: 1 }} onInput={(e) => setQuery(e.target.value)} />\r\n            <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\r\n                <SearchIcon />\r\n            </IconButton>\r\n        </FormControl>\r\n    );\r\n\r\n    return (\r\n        <div className='CityCard'>\r\n            <div className='CityCard-content'>\r\n                <Tooltip title='Excluir cidade'>\r\n                    <IconButton onClick={() => props.onDelete(props.id)} className='CityCard-delete' size='small'>\r\n                        <CloseIcon fontSize='small' />\r\n                    </IconButton>\r\n                </Tooltip>\r\n                {error\r\n                    ? <Alert severity=\"error\">{error}</Alert>   \r\n                    : weatherData && Object.keys(weatherData).length > 0\r\n                        ? (<>\r\n                            <CurrentWeather data={weatherData.current} dayData={weatherData.daily[0]} name={weatherData.name} />\r\n                            <WeatherNext data={weatherData.hourly}></WeatherNext>\r\n                        </>)\r\n                        : loading\r\n                            ? <CircularProgress className='CityCard-loader' />\r\n                            : searchForm\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CurrentWeather(props) {\r\n    const iconUrl = `https://openweathermap.org/img/wn/${props.data.weather[0].icon}@4x.png`;\r\n    const temp = Math.round(parseFloat(props.data.temp));\r\n    const tempMin = Math.round(parseFloat(props.dayData.temp.min));\r\n    const tempMax = Math.round(parseFloat(props.dayData.temp.max));\r\n\r\n    return (\r\n        <div className='CurrentWeather'>\r\n            <div className='CityCard-name'>{props.name}</div>\r\n            <Tooltip title={props.data.weather[0].description}><div className='CityCard-icon'><img src={iconUrl} alt=\"weather icon\"></img></div></Tooltip>\r\n            <div className='CityCard-temperature'>{temp}</div>\r\n            <div className='CityCard-range'>\r\n                <Tooltip title='mínima'><div className='CityCard-min'>{tempMin}</div></Tooltip>\r\n                <Tooltip title='máxima'><div className='CityCard-max'>{tempMax}</div></Tooltip>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction WeatherNext(props) {\r\n    const numHours = 12;\r\n    const hourlyData = props.data.filter((item, i) => {\r\n        return i > 0 && i <= numHours + 1;\r\n    });\r\n\r\n    return (\r\n        <HorizontalScroll className='WeatherNext'>\r\n            {hourlyData.map((data, key) => {\r\n                const iconUrl = `https://openweathermap.org/img/wn/${data.weather[0].icon}.png`;\r\n                const temp = Math.round(parseFloat(data.temp));\r\n                const precipitation = Math.round(parseFloat(data.pop) * 100);\r\n\r\n                return (\r\n                    <div className='WeatherNext-item' key={key}>\r\n                        <div className='WeatherNext-time'>{new Date(data.dt * 1000).getHours()}:00</div>\r\n                        <Tooltip title={data.weather[0].description}><div className='WeatherNext-icon'><img draggable=\"false\" src={iconUrl} alt=\"weather icon\" /></div></Tooltip>\r\n                        <div className='WeatherNext-temperature'>{temp}°</div>\r\n                        <Tooltip title=\"Chuva\"><div className='WeatherNext-rain'><img src='./waterdrop.svg' alt=\"water drop\" /> {precipitation}%</div></Tooltip>\r\n                    </div>\r\n                );\r\n            })}\r\n        </HorizontalScroll>\r\n    );\r\n}\r\n\r\nexport default CityCard;","import './CityCardList.css';\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport CityCard from './CityCard';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport Alert from '@mui/material/Alert';\r\n\r\nfunction CityCardList() {\r\n    const [cities, setCities] = useState([]);\r\n    const [error, setError] = useState({ alert: false, message: \"\" });\r\n    const citiesRef = useRef([]);\r\n\r\n    const citiesLimit = 5;\r\n\r\n    useEffect(() => {\r\n        const cityNames = JSON.parse(localStorage.getItem(\"weather_cities\")) || [];\r\n        setCities(cityNames.map((name) => { return { name } }));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        citiesRef.current = cities;\r\n        const cityNames = cities.filter((city) => { return city.name; }).map((city) => {\r\n            return city.name \r\n        });\r\n        localStorage.setItem(\"weather_cities\", JSON.stringify(cityNames));\r\n    }, [cities]);\r\n\r\n    const onSuccessQuery = function (cityName, index) {\r\n        if (typeof citiesRef.current[index] === 'undefined') return;\r\n        const newCities = citiesRef.current;\r\n        newCities[index].name = cityName;\r\n        setCities([...newCities]);\r\n    }\r\n\r\n    const newCity = function () {\r\n        if (typeof cities[cities.length - 1] !== 'undefined' && cities[cities.length - 1].name === \"\") return;\r\n        const cityComponent = <CityCard key={cities.length} id={cities.length} onDelete={deleteCard} onSuccessQuery={onSuccessQuery} onError={onCityError} />;\r\n        setCities([...cities, { name: \"\", component: cityComponent }]);\r\n    }\r\n\r\n    const deleteCard = function (index) {\r\n        if (typeof citiesRef.current[index] === 'undefined') return;\r\n        setCities(citiesRef.current.filter((el, i) => {\r\n            return i != index;\r\n        }));\r\n    }\r\n\r\n    const onCityError = function (message, index) {\r\n        setError({ alert: true, message });\r\n        deleteCard(index);\r\n    }\r\n\r\n    const errorAlertClose = function (event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n          }\r\n          setError({ alert: false, message: \"\" });\r\n    }\r\n\r\n    return (\r\n        <div className='CityCardList'>\r\n            {cities.map((city, index) => {\r\n                if (city.component) {\r\n                    return city.component;\r\n                } \r\n                if (!city.name) return;\r\n                return <CityCard key={index.toString()} id={index.toString()} name={city.name} onDelete={deleteCard} />;\r\n            })}\r\n            { cities.length < citiesLimit && <AddButton onClick={newCity} /> }\r\n            <Snackbar open={error.alert} autoHideDuration={6000} onClose={errorAlertClose}>\r\n                <Alert severity=\"error\">\r\n                    {error.message}\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AddButton(props) {\r\n    return (\r\n        <div className='AddButton'>\r\n            <Tooltip title=\"Adicionar cidade\">\r\n                <div className='add-icon' onClick={props.onClick}>\r\n                    <svg stroke=\"white\" width=\"108\" height=\"108\" viewBox=\"0 0 108 108\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path d=\"M54 4L54 104\" strokeWidth=\"8\" strokeLinecap=\"round\" />\r\n                        <path d=\"M4 54H104\" strokeWidth=\"8\" strokeLinecap=\"round\" />\r\n                    </svg>\r\n                </div>\r\n            </Tooltip>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CityCardList;","import './App.css';\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport CityCardList from './components/CityCardList';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nfunction App() {\n\tconst [colorMode, setColorMode] = useState(\"dark\");\n\n\tconst theme = createTheme({\n\t\tpalette: {\n\t\t\tmode: colorMode,\n\t\t\t...(colorMode === \"light\" && {\n\t\t\t\tbackground: {\n\t\t\t\t\tdefault: \"#efefef\"\n\t\t\t\t}\n\t\t\t}),\n\t\t},\n\t});\n\n\treturn (\n\t\t<ThemeProvider theme={theme} >\n\t\t\t<div className={`App ${colorMode}`}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Header onColorModeChange={setColorMode} />\n\t\t\t\t<CityCardList />\n\t\t\t</div>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}